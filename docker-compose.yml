version: '1'
name: moodify
services:
  db:
    container_name: moodify_db
    image: postgres:15.2
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: moodify
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - './postgres/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql'
      - './postgres/insert_values.sql:/docker-entrypoint-initdb.d/insert_values.sql'
    expose:
      - 5455
    ports:
      - 5455:5455
    command: -p 5455
    networks:
      - moodify_docker

  # db:
  #   image: mysql:latest
  #   environment:
  #     MYSQL_DATABASE: lamp_docker
  #     MYSQL_USER: lamp_docker
  #     MYSQL_PASSWORD: MYSQL_PASSWORD
  #   volumes:
  #     - './db:/docker-entrypoint-initdb.d'
  #   networks:
  #     - lamp-docker

  # backend:
  #   depends_on:
  #     - db
  #     - rabbitmq
  #   container_name: ml_backend
  #   build:
  #     context: ./backend
  #     dockerfile: ./Dockerfile
  #   extra_hosts:
  #     - "host.docker.internal:host-gateway"
  #   image: ml_backend:latest
  #   volumes:
  #     - mlops_files:/services/mlops_files
  #   #   - './:/var/www/html'
  #   ports:
  #     - 5050:5050
  #     # - 80:80
  #     # - 443:443
  #   networks:
  #     - moodify_docker
  
  # frontend:
  #   container_name: ml_frontend
  #   build:
  #     context: ./frontend
  #     dockerfile: ./Dockerfile
  #   image: ml_frontend:latest
  #   ports:
  #     - 8080:80
  #   networks:
  #     - moodify_docker
  
  rabbitmq:
    container_name: moodify_rabbitmq
    image: rabbitmq:3.11.10-management
    environment:
      RABBITMQ_USER: user
      RABBITMQ_PASSWORD: password
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./rabbitmq/definitions.json:/etc/rabbitmq/definitions.json
      # - "rabbitmq_data:/data"
    networks:
      - moodify_docker

networks:
  moodify_docker:
    name: moodify_docker

volumes:
  postgres_data:
  rabbitmq_data:
  # mlops_files:
  #   driver: local
  #   driver_opts:
  #     type: 'none'
  #     o: 'bind'
  #     device: './services/mlops_files'
  
  
